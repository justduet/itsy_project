<?php return array (
  'unique_key' => 'name',
  'preserve_keys' => false,
  'update_object' => true,
  'related_objects' => 
  array (
    'PluginEvents' => 
    array (
      '908b2cfd115df476257b587cb5817035' => 
      array (
        'preserve_keys' => true,
        'update_object' => false,
        'unique_key' => 
        array (
          0 => 'pluginid',
          1 => 'event',
        ),
        'class' => 'MODX\\Revolution\\modPluginEvent',
        'object' => '{"pluginid":0,"event":"OnPageNotFound","priority":0,"propertyset":0}',
        'guid' => 'e1e8380681c6bf0fd4b02432fac75568',
        'native_key' => 
        array (
          0 => 0,
          1 => 'OnPageNotFound',
        ),
        'signature' => 'f5eb2baaa6bb5c88ebf045710272ac03',
      ),
      '21848bf9eae880cd9d2f9d31e82de1b5' => 
      array (
        'preserve_keys' => true,
        'update_object' => false,
        'unique_key' => 
        array (
          0 => 'pluginid',
          1 => 'event',
        ),
        'class' => 'MODX\\Revolution\\modPluginEvent',
        'object' => '{"pluginid":0,"event":"OnManagerPageInit","priority":0,"propertyset":0}',
        'guid' => 'ea908173a9fb6c1236535e4a4f9dca33',
        'native_key' => 
        array (
          0 => 0,
          1 => 'OnManagerPageInit',
        ),
        'signature' => '3660584bdc35c742284a9fa7280be410',
      ),
      '858266e65fa5541d71d2c5a7ec07834a' => 
      array (
        'preserve_keys' => true,
        'update_object' => false,
        'unique_key' => 
        array (
          0 => 'pluginid',
          1 => 'event',
        ),
        'class' => 'MODX\\Revolution\\modPluginEvent',
        'object' => '{"pluginid":0,"event":"OnDocPublished","priority":0,"propertyset":0}',
        'guid' => '8be87eb21bf502cef3cc3a55a1d50c48',
        'native_key' => 
        array (
          0 => 0,
          1 => 'OnDocPublished',
        ),
        'signature' => '05405b2b62aedeada52251382af993fc',
      ),
      '0579cd0dc246e796d40d48edfb11f80b' => 
      array (
        'preserve_keys' => true,
        'update_object' => false,
        'unique_key' => 
        array (
          0 => 'pluginid',
          1 => 'event',
        ),
        'class' => 'MODX\\Revolution\\modPluginEvent',
        'object' => '{"pluginid":0,"event":"OnDocUnPublished","priority":0,"propertyset":0}',
        'guid' => '6365b3243b3ae6fcb2ed3f74bb354a5c',
        'native_key' => 
        array (
          0 => 0,
          1 => 'OnDocUnPublished',
        ),
        'signature' => '0989e068702a55f972653a2ac5ae9ca5',
      ),
    ),
  ),
  'related_object_attributes' => 
  array (
    'PluginEvents' => 
    array (
      'preserve_keys' => true,
      'update_object' => false,
      'unique_key' => 
      array (
        0 => 'pluginid',
        1 => 'event',
      ),
    ),
  ),
  'namespace' => 'articles',
  'resolve' => NULL,
  'validate' => NULL,
  'vehicle_class' => 'xPDO\\Transport\\xPDOObjectVehicle',
  'guid' => '25858cfd3dba0a27f685d9e9c4e1482f',
  'package' => '',
  'class' => 'MODX\\Revolution\\modPlugin',
  'signature' => 'b8816c7cc1625e52b4d5bdfae3467dc5',
  'native_key' => 1,
  'object' => '{"id":1,"source":0,"property_preprocess":0,"name":"ArticlesPlugin","description":"Handles FURLs for Articles.","editor_type":0,"category":0,"cache_type":0,"plugincode":"\\/**\\n * Articles\\n *\\n * Copyright 2011-12 by Shaun McCormick <shaun+articles@modx.com>\\n *\\n * Articles is free software; you can redistribute it and\\/or modify it under the\\n * terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * Articles is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * Articles; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @var \\\\MODX\\\\Revolution\\\\modX $modx\\n * @var array $scriptProperties\\n * @package articles\\n *\\/\\n\\nuse Articles\\\\Model\\\\Article;\\nuse Articles\\\\Model\\\\ArticlesRouter;\\n\\nif (!$modx->services->has(\'articles\')) {\\n    return;\\n}\\n\\n$articles = $modx->services->get(\'articles\');\\nif (!($articles instanceof Articles\\\\Articles)) return \'\';\\n\\nswitch ($modx->event->name) {\\n    case \'OnManagerPageInit\':\\n        $cssFile = $modx->getOption(\'articles.assets_url\',null,$modx->getOption(\'assets_url\').\'components\\/articles\\/\').\'css\\/mgr.css\';\\n        $modx->regClientCSS($cssFile);\\n        break;\\n\\n    case \'OnPageNotFound\':\\n        $router = new ArticlesRouter($modx);\\n        $router->route();\\n        return;\\n\\n    case \'OnDocPublished\':\\n        \\/** @var Article $resource *\\/\\n        $resource =& $scriptProperties[\'resource\'];\\n        if ($resource instanceof Article) {\\n            $resource->setArchiveUri();\\n            $resource->save();\\n            $modx->cacheManager->refresh([\\n                \'db\' => [],\\n                \'auto_publish\' => [\'contexts\' => [$resource->get(\'context_key\')]],\\n                \'context_settings\' => [\'contexts\' => [$resource->get(\'context_key\')]],\\n                \'resource\' => [\'contexts\' => [$resource->get(\'context_key\')]],\\n            ]);\\n            $resource->notifyUpdateServices();\\n            $resource->sendNotifications();\\n        }\\n        break;\\n    case \'OnDocUnPublished\':\\n        $resource =& $scriptProperties[\'resource\'];\\n        break;\\n\\n}\\nreturn;","locked":0,"properties":null,"disabled":0,"moduleguid":"","static":0,"static_file":"","content":"\\/**\\n * Articles\\n *\\n * Copyright 2011-12 by Shaun McCormick <shaun+articles@modx.com>\\n *\\n * Articles is free software; you can redistribute it and\\/or modify it under the\\n * terms of the GNU General Public License as published by the Free Software\\n * Foundation; either version 2 of the License, or (at your option) any later\\n * version.\\n *\\n * Articles is distributed in the hope that it will be useful, but WITHOUT ANY\\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\\n * A PARTICULAR PURPOSE. See the GNU General Public License for more details.\\n *\\n * You should have received a copy of the GNU General Public License along with\\n * Articles; if not, write to the Free Software Foundation, Inc., 59 Temple\\n * Place, Suite 330, Boston, MA 02111-1307 USA\\n *\\n * @var \\\\MODX\\\\Revolution\\\\modX $modx\\n * @var array $scriptProperties\\n * @package articles\\n *\\/\\n\\nuse Articles\\\\Model\\\\Article;\\nuse Articles\\\\Model\\\\ArticlesRouter;\\n\\nif (!$modx->services->has(\'articles\')) {\\n    return;\\n}\\n\\n$articles = $modx->services->get(\'articles\');\\nif (!($articles instanceof Articles\\\\Articles)) return \'\';\\n\\nswitch ($modx->event->name) {\\n    case \'OnManagerPageInit\':\\n        $cssFile = $modx->getOption(\'articles.assets_url\',null,$modx->getOption(\'assets_url\').\'components\\/articles\\/\').\'css\\/mgr.css\';\\n        $modx->regClientCSS($cssFile);\\n        break;\\n\\n    case \'OnPageNotFound\':\\n        $router = new ArticlesRouter($modx);\\n        $router->route();\\n        return;\\n\\n    case \'OnDocPublished\':\\n        \\/** @var Article $resource *\\/\\n        $resource =& $scriptProperties[\'resource\'];\\n        if ($resource instanceof Article) {\\n            $resource->setArchiveUri();\\n            $resource->save();\\n            $modx->cacheManager->refresh([\\n                \'db\' => [],\\n                \'auto_publish\' => [\'contexts\' => [$resource->get(\'context_key\')]],\\n                \'context_settings\' => [\'contexts\' => [$resource->get(\'context_key\')]],\\n                \'resource\' => [\'contexts\' => [$resource->get(\'context_key\')]],\\n            ]);\\n            $resource->notifyUpdateServices();\\n            $resource->sendNotifications();\\n        }\\n        break;\\n    case \'OnDocUnPublished\':\\n        $resource =& $scriptProperties[\'resource\'];\\n        break;\\n\\n}\\nreturn;"}',
);